"""
Реализуйте контекстный менеджер make_tag с помощью декоратора @contextmanager, который принимает один аргумент:

    tag — произвольная строка

Контекстный менеджер должен выводить строку tag при входе в блок with и после выхода из блока with.

Примечание 1. Наглядные примеры использования контекстного менеджера make_tag продемонстрированы в тестовых данных.

Примечание 2. Дополнительная проверка данных на корректность не требуется.
                Гарантируется, что реализованный контекстный менеджер используется только с корректными данными.
"""
from contextlib import contextmanager


@contextmanager
def make_tag(tag):
    print(tag)
    yield
    print(tag)


# INPUT DATA:

# TEST_1:
print("\nтест 1")
with make_tag('---'):
    print('Поколение Python')

# TEST_2:
print("\nтест 2")
with make_tag('**********'):
    print('Челябинск')

# TEST_3:
print("\nтест 3")
with make_tag('--- Ломтик хлеба ---'):
    print('томат | салат | сыр | бекон')

# TEST_4:
print("\nтест 4")
with make_tag('*' * 20), make_tag(' ' * 5 + '-' * 10), make_tag(' ' * 7 + '=' * 6):
    print(' ' * 7 + 'привет')
